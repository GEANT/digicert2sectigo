---
- name: "Fetch data for certificate order {{ item }} from Digicert API"
  uri:
    url: "https://www.digicert.com/services/v2/order/certificate/{{ item }}"
    return_content: yes
    headers:
      X-DC-DEVKEY: "{{ digicert_api_key }}"
  register: res


- name: Combine user email with additional_emails, and find list of subjectAltNames
  set_fact:
    mails: "{{ [res.json.user.email] | union(res.json.additional_emails | default([])) }}"
    sans: "{{ res.json.certificate.dns_names }}"

- name: Search/replace email addresses
  set_fact:
    mails: "{{ mails | map('regex_replace', mail['search'], mail['replace']) | list | sort }}"
  loop: "{{ sectigo_email_map }}"
  loop_control:
    loop_var: mail

- name: Remove regex patterns from list of subjectAltNames
  set_fact:
    sans: "{{ sans | reject('regex', san_pattern) | list | sort }}"
  loop: "{{ sectigo_drop_san_patterns }}"
  loop_control:
    loop_var: san_pattern

- name: Review information before submitting it
  pause:
    prompt: |
      commonName: {{ res.json.certificate.common_name }}
      subjAltNames:

      {% for san in sans %}
       - {{ san }}
      {% endfor %}

      mails:
      {% for mail in mails %}
       - {{ mail }}
      {% endfor %}
  when: confirm|bool

- name: "Request new certificate through Sectigo API (common name: {{ res.json.certificate.common_name }})"
  uri:
    url: https://cert-manager.com/api/ssl/v1/enroll
    return_content: yes
    method: POST
    headers: "{{ sectigo_headers }}"
    body_format: json
    body:
      orgId: "{{ sectigo_orgId }}"
      csr: "{{ res.json.certificate.csr }}"
      commonName: "{{ res.json.certificate.common_name }}"
      subjAltNames: "{{ sans | join(',') }}"
      term: "{{ sectigo_cert_term }}"
      certType: "{{ sectigo_cert_profile_id }}"
      externalRequester: "{{ mails | join(',') }}"
      comments: "{{ sectigo_cert_comments }}"
  register: sectigo1
